import { useState } from "react";
import { useQuery, useMutation } from "@tanstack/react-query";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";  
import { Textarea } from "@/components/ui/textarea";
import { useToast } from "@/hooks/use-toast";
import { apiRequest } from "@/lib/queryClient";
import { ArrowLeft, Save, Edit, Trash2 } from "lucide-react";
import { useLocation } from "wouter";

export default function MainMenuSimple() {
  const [, setLocation] = useLocation();
  const { toast } = useToast();

  // Navigation functions
  const handleBackToDashboard = () => {
    setLocation('/admin/dashboard');
  };

  const handleEditArticle = (articleId: number) => {
    // Navigate to dashboard and store the article to edit
    localStorage.setItem('editArticleId', articleId.toString());
    setLocation('/admin/dashboard');
    toast({
      title: "Chuy·ªÉn ƒë·∫øn Dashboard",
      description: "Scroll xu·ªëng ph·∫ßn B√†i vi·∫øt ƒë·ªÉ ch·ªânh s·ª≠a",
    });
  };

  const handleEditProgram = (programId: number) => {
    localStorage.setItem('editProgramId', programId.toString());
    setLocation('/admin/dashboard'); 
    toast({
      title: "Chuy·ªÉn ƒë·∫øn Dashboard",
      description: "Scroll xu·ªëng ph·∫ßn Ch∆∞∆°ng tr√¨nh ƒë·ªÉ ch·ªânh s·ª≠a",
    });
  };

  const handleEditActivity = (activityId: number) => {
    localStorage.setItem('editActivityId', activityId.toString());
    setLocation('/admin/dashboard');
    toast({
      title: "Chuy·ªÉn ƒë·∫øn Dashboard", 
      description: "Scroll xu·ªëng ph·∫ßn Ho·∫°t ƒë·ªông ƒë·ªÉ ch·ªânh s·ª≠a",
    });
  };

  // Fetch data
  const { data: articles = [] } = useQuery({
    queryKey: ['/api/articles'],
  });

  const { data: programs = [] } = useQuery({
    queryKey: ['/api/programs'],
  });

  const { data: activities = [] } = useQuery({
    queryKey: ['/api/activities'],
  });

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="container mx-auto px-4 py-8">
        {/* Header v·ªõi n√∫t Back */}
        <div className="mb-8">
          <div className="flex items-center gap-4 mb-4">
            <Button 
              variant="outline" 
              onClick={handleBackToDashboard}
              className="flex items-center gap-2"
            >
              <ArrowLeft className="w-4 h-4" />
              Quay l·∫°i Dashboard
            </Button>
          </div>
          
          <h1 className="text-3xl font-bold text-gray-900 mb-2">
            Qu·∫£n l√Ω Menu Ch√≠nh Website
          </h1>
          <p className="text-gray-600">
            Qu·∫£n l√Ω n·ªôi dung c√°c trang ch√≠nh c·ªßa website. B·∫•m S·ª≠a ƒë·ªÉ ch·ªânh s·ª≠a t·ª´ng item.
          </p>
        </div>

        {/* Grid layout v·ªõi ch·ª©c nƒÉng s·ª≠a ho·∫°t ƒë·ªông */}
        <div className="grid gap-6">
          
          {/* Qu·∫£n l√Ω B√†i vi·∫øt */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center justify-between">
                <div>üì∞ Qu·∫£n l√Ω Tin t·ª©c & B√†i vi·∫øt</div>
                <Button variant="outline" onClick={() => setLocation('/admin/dashboard')}>
                  Chi ti·∫øt trong Dashboard
                </Button>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
                {(articles as any[]).slice(0, 6).map((article: any) => (
                  <div key={article.id} className="border p-4 rounded-lg">
                    <h4 className="font-semibold text-sm">{article.title}</h4>
                    <p className="text-xs text-gray-600 mt-1">{article.category}</p>
                    <div className="flex gap-2 mt-3">
                      <Button 
                        size="sm" 
                        variant="outline"
                        onClick={() => handleEditArticle(article.id)}
                        title="Ch·ªânh s·ª≠a b√†i vi·∫øt"
                      >
                        <Edit className="w-3 h-3" />
                      </Button>
                      <Button size="sm" variant="destructive" title="X√≥a b√†i vi·∫øt">
                        <Trash2 className="w-3 h-3" />
                      </Button>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* Qu·∫£n l√Ω Ch∆∞∆°ng tr√¨nh */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center justify-between">
                <div>üìö Qu·∫£n l√Ω Ch∆∞∆°ng tr√¨nh h·ªçc</div>
                <Button variant="outline" onClick={() => setLocation('/admin/dashboard')}>
                  Chi ti·∫øt trong Dashboard
                </Button>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid md:grid-cols-2 gap-4">
                {(programs as any[]).map((program: any) => (
                  <div key={program.id} className="border p-4 rounded-lg">
                    <h4 className="font-semibold">{program.name}</h4>
                    <p className="text-sm text-gray-600">{program.ageRange}</p>
                    <p className="text-sm text-green-600 font-medium mt-2">
                      {program.tuition?.toLocaleString()} VND/th√°ng
                    </p>
                    <div className="flex gap-2 mt-3">
                      <Button 
                        size="sm" 
                        variant="outline"
                        onClick={() => handleEditProgram(program.id)}
                        title="Ch·ªânh s·ª≠a ch∆∞∆°ng tr√¨nh"
                      >
                        <Edit className="w-3 h-3" />
                      </Button>
                      <Button size="sm" variant="destructive" title="X√≥a ch∆∞∆°ng tr√¨nh">
                        <Trash2 className="w-3 h-3" />
                      </Button>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* Qu·∫£n l√Ω Ho·∫°t ƒë·ªông */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center justify-between">
                <div>üéØ Qu·∫£n l√Ω Ho·∫°t ƒë·ªông</div>
                <Button variant="outline" onClick={() => setLocation('/admin/dashboard')}>
                  Chi ti·∫øt trong Dashboard
                </Button>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
                {(activities as any[]).map((activity: any) => (
                  <div key={activity.id} className="border p-4 rounded-lg">
                    <h4 className="font-semibold text-sm">{activity.name}</h4>
                    <p className="text-xs text-gray-600">{activity.date}</p>
                    <p className="text-xs text-blue-600 mt-1">üìç {activity.location}</p>
                    <div className="flex gap-2 mt-3">
                      <Button 
                        size="sm" 
                        variant="outline"
                        onClick={() => handleEditActivity(activity.id)}
                        title="Ch·ªânh s·ª≠a ho·∫°t ƒë·ªông"
                      >
                        <Edit className="w-3 h-3" />
                      </Button>
                      <Button size="sm" variant="destructive" title="X√≥a ho·∫°t ƒë·ªông">
                        <Trash2 className="w-3 h-3" />
                      </Button>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* Menu Ch√≠nh Website - Truy c·∫≠p t·ª´ng trang */}
          <Card>
            <CardHeader>
              <CardTitle>üéõÔ∏è Qu·∫£n l√Ω t·ª´ng trang Website</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                <Button 
                  variant="outline" 
                  className="h-24 flex flex-col items-center justify-center"
                  onClick={() => setLocation('/')}
                  title="Xem trang ch·ªß website"
                >
                  <div className="text-2xl mb-2">üè†</div>
                  <div className="text-sm">Xem Trang ch·ªß</div>
                </Button>
                
                <Button 
                  variant="outline" 
                  className="h-24 flex flex-col items-center justify-center"
                  onClick={() => setLocation('/about')}
                  title="Xem trang gi·ªõi thi·ªáu"
                >
                  <div className="text-2xl mb-2">‚ÑπÔ∏è</div>
                  <div className="text-sm">Xem Gi·ªõi thi·ªáu</div>
                </Button>
                
                <Button 
                  variant="outline" 
                  className="h-24 flex flex-col items-center justify-center"
                  onClick={() => setLocation('/admission')}
                  title="Xem trang tuy·ªÉn sinh"
                >
                  <div className="text-2xl mb-2">üéì</div>
                  <div className="text-sm">Xem Tuy·ªÉn sinh</div>
                </Button>
                
                <Button 
                  variant="outline" 
                  className="h-24 flex flex-col items-center justify-center"
                  onClick={() => setLocation('/contact')}
                  title="Xem trang li√™n h·ªá"
                >
                  <div className="text-2xl mb-2">üìû</div>
                  <div className="text-sm">Xem Li√™n h·ªá</div>
                </Button>
              </div>
              
              <div className="mt-6 grid grid-cols-2 md:grid-cols-4 gap-4">
                <Button 
                  variant="outline" 
                  className="h-24 flex flex-col items-center justify-center"
                  onClick={() => setLocation('/programs')}
                  title="Xem trang ch∆∞∆°ng tr√¨nh"
                >
                  <div className="text-2xl mb-2">üìö</div>
                  <div className="text-sm">Xem Ch∆∞∆°ng tr√¨nh</div>
                </Button>
                
                <Button 
                  variant="outline" 
                  className="h-24 flex flex-col items-center justify-center"
                  onClick={() => setLocation('/activities')}
                  title="Xem trang ho·∫°t ƒë·ªông"
                >
                  <div className="text-2xl mb-2">üéØ</div>
                  <div className="text-sm">Xem Ho·∫°t ƒë·ªông</div>
                </Button>
                
                <Button 
                  variant="outline" 
                  className="h-24 flex flex-col items-center justify-center"
                  onClick={() => setLocation('/news')}
                  title="Xem trang tin t·ª©c"
                >
                  <div className="text-2xl mb-2">üì∞</div>
                  <div className="text-sm">Xem Tin t·ª©c</div>
                </Button>
                
                <Button 
                  variant="outline" 
                  className="h-24 flex flex-col items-center justify-center"
                  onClick={() => setLocation('/parents')}
                  title="Xem th∆∞ vi·ªán ph·ª• huynh"
                >
                  <div className="text-2xl mb-2">üë®‚Äçüë©‚Äçüëß‚Äçüë¶</div>
                  <div className="text-sm">Th∆∞ vi·ªán PH</div>
                </Button>
              </div>
            </CardContent>
          </Card>

        </div>
      </div>
    </div>
  );
}